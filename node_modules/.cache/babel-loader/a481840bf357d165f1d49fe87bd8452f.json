{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Pictures\\\\Tsports\\\\tsports\\\\src\\\\components\\\\Counterup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counterup = _ref => {\n  _s();\n\n  let {\n    start = 0,\n    end\n  } = _ref;\n  const [state, setState] = useState(null);\n  const ref = useRef(start);\n  const accumulater = end / 20;\n\n  const updatecurrentState = () => {\n    if (ref.current < end) {\n      const result = Math.ceil(ref.current + accumulater);\n      if (result > end) return setState(end);\n      setState(result);\n      ref.current = result;\n    }\n\n    setTimeout(updatecurrentState, 50);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      updatecurrentState();\n    }\n\n    return () => isMounted = false;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counterup, \"H33KQv7xA2e5xTQ14MMBgLfLBnk=\");\n\n_c = Counterup;\nexport default Counterup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counterup\");","map":{"version":3,"sources":["C:/Users/ACER/Pictures/Tsports/tsports/src/components/Counterup.js"],"names":["React","useEffect","useRef","useState","Counterup","start","end","state","setState","ref","accumulater","updatecurrentState","current","result","Math","ceil","setTimeout","isMounted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAEC,MAAMC,SAAS,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,KAAK,GAAG,CAAV;AAAaC,IAAAA;AAAb,GAAuB;AACvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMM,GAAG,GAAGP,MAAM,CAACG,KAAD,CAAlB;AACA,QAAMK,WAAW,GAAGJ,GAAG,GAAG,EAA1B;;AACA,QAAMK,kBAAkB,GAAG,MAAM;AAC7B,QAAGF,GAAG,CAACG,OAAJ,GAAcN,GAAjB,EAAqB;AACjB,YAAMO,MAAM,GAAGC,IAAI,CAACC,IAAL,CAAUN,GAAG,CAACG,OAAJ,GAAcF,WAAxB,CAAf;AAEA,UAAGG,MAAM,GAAGP,GAAZ,EAAiB,OAAOE,QAAQ,CAACF,GAAD,CAAf;AACjBE,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACAJ,MAAAA,GAAG,CAACG,OAAJ,GAAcC,MAAd;AACH;;AACDG,IAAAA,UAAU,CAACL,kBAAD,EAAqB,EAArB,CAAV;AACH,GATD;;AAWAV,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIgB,SAAS,GAAG,IAAhB;;AACA,QAAGA,SAAH,EAAa;AACTN,MAAAA,kBAAkB;AACrB;;AAED,WAAM,MAAMM,SAAS,GAAG,KAAxB;AACH,GAPQ,CAAT;AAQF,sBACE;AAAA,cAAMV;AAAN;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA1BA;;GAAMH,S;;KAAAA,S;AA2BP,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\n\n const Counterup = ({ start = 0, end }) => {\n    const [state, setState] = useState(null);\n    const ref = useRef(start);\n    const accumulater = end / 20;\n    const updatecurrentState = () => {\n        if(ref.current < end){\n            const result = Math.ceil(ref.current + accumulater)\n\n            if(result > end) return setState(end)\n            setState(result)\n            ref.current = result\n        }\n        setTimeout(updatecurrentState, 50)\n    }\n\n    useEffect(()=>{\n        let isMounted = true;\n        if(isMounted){\n            updatecurrentState();\n        }\n        \n        return() =>(isMounted = false);\n    })\n  return (\n    <div>{state}</div>\n  )\n}\nexport default Counterup"]},"metadata":{},"sourceType":"module"}